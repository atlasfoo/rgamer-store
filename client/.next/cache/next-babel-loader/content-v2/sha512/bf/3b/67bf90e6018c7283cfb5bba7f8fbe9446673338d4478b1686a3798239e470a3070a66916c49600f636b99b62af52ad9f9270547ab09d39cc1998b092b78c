{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/media/Data/Repos/rgamer-store/client/components/Auth/Forms/RegisterForm/RegisterForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useFormik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport * as UserApi from '../../../../api/user';\nimport { initialValues, validationSchema } from \"./RegisterFormValues\";\nexport default function RegisterForm(_ref) {\n  _s();\n\n  var showLoginForm = _ref.showLoginForm;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return UserApi.create(data);\n\n            case 3:\n              response = _context.sent;\n              console.log(response);\n\n              if (response !== null && response !== void 0 && response.jwt) {\n                showLoginForm();\n              } else {\n                toast.error(\"Error al registrar el usuario\");\n              }\n\n              setLoading(false);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // Formik Hooks\n\n\n  var _useFormik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit\n  }),\n      handleSubmit = _useFormik.handleSubmit,\n      handleChange = _useFormik.handleChange,\n      errors = _useFormik.errors;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Nombre\",\n      onChange: handleChange,\n      error: errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"lastname\",\n      type: \"text\",\n      placeholder: \"Apellidos\",\n      onChange: handleChange,\n      error: errors.lastname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"Nombre de Usuario\",\n      onChange: handleChange,\n      error: errors.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Correo\",\n      onChange: handleChange,\n      error: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Contrase\\xF1a\",\n      onChange: handleChange,\n      error: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        basic: true,\n        onClick: showLoginForm,\n        children: \"Iniciar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"submit\",\n        loading: loading,\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"5Dw/58mATUrQiae9PmZGTFYDaNs=\", false, function () {\n  return [useFormik];\n});\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/media/Data/Repos/rgamer-store/client/components/Auth/Forms/RegisterForm/RegisterForm.jsx"],"names":["useFormik","React","useState","toast","Button","Form","UserApi","initialValues","validationSchema","RegisterForm","showLoginForm","onSubmit","data","setLoading","create","response","console","log","jwt","error","handleSubmit","handleChange","errors","loading","name","lastname","username","email","password"],"mappings":"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","sourcesContent":["import { useFormik } from \"formik\";\nimport React, {useState} from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Button, Form } from \"semantic-ui-react\";\n\nimport * as UserApi from '../../../../api/user';\nimport { initialValues, validationSchema } from \"./RegisterFormValues\";\n\n\nexport default function RegisterForm({ showLoginForm }) {\n\n  const onSubmit = async (data) => {\n    setLoading(true);\n    const response = await UserApi.create(data);\n    \n    console.log(response);\n\n    if(response?.jwt){\n      showLoginForm();\n    }else{\n      toast.error(\"Error al registrar el usuario\");\n    }\n\n    setLoading(false);\n  };\n\n  // Formik Hooks\n  const { handleSubmit, handleChange, errors } = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n  });\n\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Input\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Nombre\"\n        onChange={handleChange}\n        error={errors.name}\n      />\n\n      <Form.Input\n        name=\"lastname\"\n        type=\"text\"\n        placeholder=\"Apellidos\"\n        onChange={handleChange}\n        error={errors.lastname}\n      />\n\n      <Form.Input\n        name=\"username\"\n        type=\"text\"\n        placeholder=\"Nombre de Usuario\"\n        onChange={handleChange}\n        error={errors.username}\n      />\n\n      <Form.Input\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Correo\"\n        onChange={handleChange}\n        error={errors.email}\n      />\n\n      <Form.Input\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"ContraseÃ±a\"\n        onChange={handleChange}\n        error={errors.password}\n      />\n\n      <div className=\"actions\">\n        <Button type=\"button\" basic onClick={showLoginForm}>\n          Iniciar sesi&oacute;n\n        </Button>\n        <Button type=\"submit\" className=\"submit\" loading={loading}>\n          Registrar\n        </Button>\n      </div>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}