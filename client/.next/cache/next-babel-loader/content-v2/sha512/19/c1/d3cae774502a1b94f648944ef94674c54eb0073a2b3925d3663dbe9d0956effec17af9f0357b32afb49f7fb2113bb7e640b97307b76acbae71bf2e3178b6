{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/Data/Repos/rgamer-store/client/pages/_app.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"../scss/global.scss\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AuthContext from \"../context/AuthContext\";\nimport { useMemo, useState, useEffect } from \"react\";\nimport jwtDecode from \"jwt-decode\";\nimport { setToken, getToken } from \"../api/token\";\nexport default function MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState({}),\n      auth = _useState[0],\n      setAuth = _useState[1];\n\n  var _useState2 = useState(false),\n      reloadUser = _useState2[0],\n      setReloadUser = _useState2[1];\n\n  useEffect(function () {\n    var token = getToken();\n\n    if (token) {\n      var _jwtDecode;\n\n      setAuth({\n        token: token,\n        user_id: (_jwtDecode = jwtDecode(token)) === null || _jwtDecode === void 0 ? void 0 : _jwtDecode.id\n      });\n    } else {\n      setAuth(null);\n    }\n  }, []);\n\n  var login = function login(token) {\n    var _jwtDecode2;\n\n    setToken(token);\n    setAuth({\n      token: token,\n      user_id: (_jwtDecode2 = jwtDecode(token)) === null || _jwtDecode2 === void 0 ? void 0 : _jwtDecode2.id\n    });\n  };\n\n  var authData = useMemo(function () {\n    return {\n      session: auth,\n      login: login,\n      logout: function logout() {\n        return null;\n      },\n      setReloadUser: setReloadUser\n    };\n  }, [auth]);\n  if (auth === undefined) return null;\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authData,\n    children: [/*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: true,\n      newestOnTop: true,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: false,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"BKtFfqWAiH6yf0Afwzv45g+eXiU=\");\n\n_c = MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/media/Data/Repos/rgamer-store/client/pages/_app.js"],"names":["ToastContainer","AuthContext","useMemo","useState","useEffect","jwtDecode","setToken","getToken","MyApp","Component","pageProps","auth","setAuth","reloadUser","setReloadUser","token","user_id","id","login","authData","session","logout","undefined"],"mappings":";;;;;;;;;;AAAA,SAASA,cAAT,QAA+B,gBAA/B;AACA,OAAO,qBAAP;AACA,OAAO,kCAAP;AACA,OAAO,uCAAP;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,cAAnC;AAEA,eAAe,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBAC9BP,QAAQ,CAAC,EAAD,CADsB;AAAA,MAC/CQ,IAD+C;AAAA,MACzCC,OADyC;;AAAA,mBAElBT,QAAQ,CAAC,KAAD,CAFU;AAAA,MAE/CU,UAF+C;AAAA,MAEnCC,aAFmC;;AAItDV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,KAAK,GAAGR,QAAQ,EAAtB;;AACA,QAAIQ,KAAJ,EAAW;AAAA;;AACTH,MAAAA,OAAO,CAAC;AACNG,QAAAA,KAAK,EAALA,KADM;AAENC,QAAAA,OAAO,gBAAEX,SAAS,CAACU,KAAD,CAAX,+CAAE,WAAkBE;AAFrB,OAAD,CAAP;AAID,KALD,MAKO;AACLL,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GAVQ,EAUN,EAVM,CAAT;;AAYA,MAAMM,KAAK,GAAG,SAARA,KAAQ,CAACH,KAAD,EAAW;AAAA;;AACvBT,IAAAA,QAAQ,CAACS,KAAD,CAAR;AACAH,IAAAA,OAAO,CAAC;AACNG,MAAAA,KAAK,EAALA,KADM;AAENC,MAAAA,OAAO,iBAAEX,SAAS,CAACU,KAAD,CAAX,gDAAE,YAAkBE;AAFrB,KAAD,CAAP;AAID,GAND;;AAQA,MAAME,QAAQ,GAAGjB,OAAO,CACtB;AAAA,WAAO;AACLkB,MAAAA,OAAO,EAAET,IADJ;AAELO,MAAAA,KAAK,EAALA,KAFK;AAGLG,MAAAA,MAAM,EAAE;AAAA,eAAM,IAAN;AAAA,OAHH;AAILP,MAAAA,aAAa,EAAEA;AAJV,KAAP;AAAA,GADsB,EAOtB,CAACH,IAAD,CAPsB,CAAxB;AAUA,MAAIA,IAAI,KAAKW,SAAb,EAAwB,OAAO,IAAP;AAExB,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEH,QAA7B;AAAA,4BACE,QAAC,SAAD,oBAAeT,SAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AACE,MAAA,QAAQ,EAAC,WADX;AAEE,MAAA,SAAS,EAAE,IAFb;AAGE,MAAA,eAAe,MAHjB;AAIE,MAAA,WAAW,MAJb;AAKE,MAAA,YAAY,MALd;AAME,MAAA,GAAG,EAAE,KANP;AAOE,MAAA,gBAAgB,EAAE,KAPpB;AAQE,MAAA,SAAS,MARX;AASE,MAAA,YAAY;AATd;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GApDuBF,K;;KAAAA,K","sourcesContent":["import { ToastContainer } from \"react-toastify\";\nimport \"../scss/global.scss\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AuthContext from \"../context/AuthContext\";\nimport { useMemo, useState, useEffect } from \"react\";\nimport jwtDecode from \"jwt-decode\";\nimport { setToken, getToken } from \"../api/token\";\n\nexport default function MyApp({ Component, pageProps }) {\n  const [auth, setAuth] = useState({});\n  const [reloadUser, setReloadUser] = useState(false)\n\n  useEffect(() => {\n    const token = getToken();\n    if (token) {\n      setAuth({\n        token,\n        user_id: jwtDecode(token)?.id,\n      });\n    } else {\n      setAuth(null);\n    }\n  }, []);\n\n  const login = (token) => {\n    setToken(token);\n    setAuth({\n      token,\n      user_id: jwtDecode(token)?.id,\n    });\n  };\n\n  const authData = useMemo(\n    () => ({\n      session: auth,\n      login,\n      logout: () => null,\n      setReloadUser: setReloadUser,\n    }),\n    [auth]\n  );\n\n  if (auth === undefined) return null;\n\n  return (\n    <AuthContext.Provider value={authData}>\n      <Component {...pageProps} />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable\n        pauseOnHover\n      />\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}