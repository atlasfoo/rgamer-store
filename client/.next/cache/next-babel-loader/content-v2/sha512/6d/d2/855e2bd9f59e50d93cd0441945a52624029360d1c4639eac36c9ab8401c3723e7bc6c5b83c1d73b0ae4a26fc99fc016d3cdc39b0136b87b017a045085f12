{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/Data/Repos/rgamer-store/client/components/Auth/Forms/RegisterForm/RegisterForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useFormik } from \"formik\";\nimport React from \"react\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport * as UserApi from '../../../../api/user';\nimport RegisterValidationSchema from \"./RegisterValidationSchema\";\nvar initialValues = {\n  name: \"\",\n  lastname: \"\",\n  username: \"\",\n  email: \"\",\n  password: \"\"\n};\nexport default function RegisterForm(_ref) {\n  _s();\n\n  var showLoginForm = _ref.showLoginForm;\n\n  var onSubmit = function onSubmit(data) {\n    UserApi.create(data);\n  }; // Formik Hooks\n\n\n  var _useFormik = useFormik({\n    initialValues: initialValues,\n    validationSchema: RegisterValidationSchema,\n    onSubmit: onSubmit\n  }),\n      handleSubmit = _useFormik.handleSubmit,\n      handleChange = _useFormik.handleChange,\n      errors = _useFormik.errors;\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Nombre\",\n      onChange: handleChange,\n      error: errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"lastname\",\n      type: \"text\",\n      placeholder: \"Apellidos\",\n      onChange: handleChange,\n      error: errors.lastname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"Nombre de Usuario\",\n      onChange: handleChange,\n      error: errors.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Correo\",\n      onChange: handleChange,\n      error: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Contrase\\xF1a\",\n      onChange: handleChange,\n      error: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        basic: true,\n        children: \"Iniciar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"submit\",\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"Jk7AddtzApM1/DUpoJY+2n37E2A=\", false, function () {\n  return [useFormik];\n});\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/media/Data/Repos/rgamer-store/client/components/Auth/Forms/RegisterForm/RegisterForm.jsx"],"names":["useFormik","React","Button","Form","UserApi","RegisterValidationSchema","initialValues","name","lastname","username","email","password","RegisterForm","showLoginForm","onSubmit","data","create","validationSchema","handleSubmit","handleChange","errors"],"mappings":"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","sourcesContent":["import { useFormik } from \"formik\";\nimport React from \"react\";\nimport { Button, Form } from \"semantic-ui-react\";\n\nimport * as UserApi from '../../../../api/user';\n\nimport RegisterValidationSchema from \"./RegisterValidationSchema\";\n\nconst initialValues = {\n  name: \"\",\n  lastname: \"\",\n  username: \"\",\n  email: \"\",\n  password: \"\",\n};\n\nexport default function RegisterForm({ showLoginForm }) {\n  const onSubmit = (data) => {\n    UserApi.create(data);\n  };\n\n  // Formik Hooks\n  const { handleSubmit, handleChange, errors } = useFormik({\n    initialValues,\n    validationSchema: RegisterValidationSchema,\n    onSubmit: onSubmit,\n  });\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Input\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Nombre\"\n        onChange={handleChange}\n        error={errors.name}\n      />\n\n      <Form.Input\n        name=\"lastname\"\n        type=\"text\"\n        placeholder=\"Apellidos\"\n        onChange={handleChange}\n        error={errors.lastname}\n      />\n\n      <Form.Input\n        name=\"username\"\n        type=\"text\"\n        placeholder=\"Nombre de Usuario\"\n        onChange={handleChange}\n        error={errors.username}\n      />\n\n      <Form.Input\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Correo\"\n        onChange={handleChange}\n        error={errors.email}\n      />\n\n      <Form.Input\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"ContraseÃ±a\"\n        onChange={handleChange}\n        error={errors.password}\n      />\n\n      <div className=\"actions\">\n        <Button type=\"button\" basic>\n          Iniciar sesi&oacute;n\n        </Button>\n        <Button type=\"submit\" className=\"submit\">\n          Registrar\n        </Button>\n      </div>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}