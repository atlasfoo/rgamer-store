{"ast":null,"code":"import { BASE_PATH } from \"../utils/consts\";\n\nconst create = async user => {\n  try {\n    const url = `${BASE_PATH}/auth/local/register`;\n    console.log(BASE_PATH);\n    console.log(user);\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\n\nconst login = async data => {\n  try {\n    const url = `${BASE_PATH}/auth/local`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    return null;\n  }\n};\n\nconst resetPassword = async email => {\n  try {\n    const url = `${BASE_PATH}/auth/forgot-password`;\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    };\n    const response = await fetch(url, params);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { create, login, resetPassword };","map":{"version":3,"sources":["/media/Data/Repos/rgamer-store/client/api/user.js"],"names":["BASE_PATH","create","user","url","console","log","params","method","headers","body","JSON","stringify","response","fetch","result","json","error","login","data","resetPassword","email"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;;AAEA,MAAMC,MAAM,GAAG,MAAOC,IAAP,IAAgB;AAC7B,MAAI;AACF,UAAMC,GAAG,GAAI,GAAEH,SAAU,sBAAzB;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAMI,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFI;AAKbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AALO,KAAf;AAQA,UAAMU,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAD,EAAMG,MAAN,CAA5B;AAEA,UAAMQ,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AAEA,WAAOD,MAAP;AACD,GAnBD,CAmBE,OAAOE,KAAP,EAAc;AACdZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACA,WAAO,IAAP;AACD;AACF,CAxBD;;AA0BA,MAAMC,KAAK,GAAG,MAAOC,IAAP,IAAgB;AAC5B,MAAI;AACF,UAAMf,GAAG,GAAI,GAAEH,SAAU,aAAzB;AAEA,UAAMM,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFI;AAKbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeO,IAAf;AALO,KAAf;AAQA,UAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAD,EAAMG,MAAN,CAA5B;AAEA,UAAMQ,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AAEA,WAAOD,MAAP;AACD,GAhBD,CAgBE,OAAOE,KAAP,EAAc;AAAC,WAAO,IAAP;AAAa;AAC/B,CAlBD;;AAoBA,MAAMG,aAAa,GAAG,MAAOC,KAAP,IAAiB;AACrC,MAAI;AACF,UAAMjB,GAAG,GAAI,GAAEH,SAAU,uBAAzB;AAEA,UAAMM,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFI;AAKbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACS,QAAAA;AAAD,OAAf;AALO,KAAf;AAQA,UAAMR,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAD,EAAMG,MAAN,CAA5B;AAEA,UAAMQ,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AAEA,WAAOD,MAAP;AACD,GAhBD,CAgBE,OAAOE,KAAP,EAAc;AACd,WAAO,IAAP;AACD;AACF,CApBD;;AAsBA,SAASf,MAAT,EAAiBgB,KAAjB,EAAwBE,aAAxB","sourcesContent":["import { BASE_PATH } from \"../utils/consts\";\n\nconst create = async (user) => {\n  try {\n    const url = `${BASE_PATH}/auth/local/register`;\n\n    console.log(BASE_PATH);\n\n    console.log(user);\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    };\n\n    const response = await fetch(url, params);\n\n    const result = await response.json();\n\n    return result;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\n\nconst login = async (data) => {\n  try {\n    const url = `${BASE_PATH}/auth/local`;\n\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    };\n\n    const response = await fetch(url, params);\n\n    const result = await response.json();\n\n    return result;\n  } catch (error) {return null;}\n};\n\nconst resetPassword = async (email) => {\n  try {\n    const url = `${BASE_PATH}/auth/forgot-password`;\n\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({email}),\n    };\n\n    const response = await fetch(url, params);\n\n    const result = await response.json();\n\n    return result;\n  } catch (error) {\n    return null;\n  }\n}\n\nexport { create, login, resetPassword };\n"]},"metadata":{},"sourceType":"module"}