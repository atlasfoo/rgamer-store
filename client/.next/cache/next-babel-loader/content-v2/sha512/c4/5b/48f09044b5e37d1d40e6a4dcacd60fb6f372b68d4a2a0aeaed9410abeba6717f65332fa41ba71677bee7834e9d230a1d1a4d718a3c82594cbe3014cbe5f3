{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/Data/Repos/rgamer-store/client/components/Auth/Forms/RegisterForm/RegisterForm.jsx\";\nimport { useFormik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport * as UserApi from '../../../../api/user';\nimport RegisterValidationSchema from \"./RegisterValidationSchema\";\nconst initialValues = {\n  name: \"\",\n  lastname: \"\",\n  username: \"\",\n  email: \"\",\n  password: \"\"\n};\nexport default function RegisterForm({\n  showLoginForm\n}) {\n  const onSubmit = async data => {\n    setLoading(true);\n    const response = await UserApi.create(data);\n    console.log(response);\n\n    if (response !== null && response !== void 0 && response.jwt) {\n      showLoginForm();\n    } else {\n      toast.error(\"Error al registrar el usuario\");\n    }\n\n    setLoading(false);\n  }; // Formik Hooks\n\n\n  const {\n    handleSubmit,\n    handleChange,\n    errors\n  } = useFormik({\n    initialValues,\n    validationSchema: RegisterValidationSchema,\n    onSubmit: onSubmit\n  });\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Nombre\",\n      onChange: handleChange,\n      error: errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"lastname\",\n      type: \"text\",\n      placeholder: \"Apellidos\",\n      onChange: handleChange,\n      error: errors.lastname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"Nombre de Usuario\",\n      onChange: handleChange,\n      error: errors.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Correo\",\n      onChange: handleChange,\n      error: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Contrase\\xF1a\",\n      onChange: handleChange,\n      error: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        basic: true,\n        onClick: showLoginForm,\n        children: \"Iniciar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"submit\",\n        loading: loading,\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/media/Data/Repos/rgamer-store/client/components/Auth/Forms/RegisterForm/RegisterForm.jsx"],"names":["useFormik","React","useState","toast","Button","Form","UserApi","RegisterValidationSchema","initialValues","name","lastname","username","email","password","RegisterForm","showLoginForm","onSubmit","data","setLoading","response","create","console","log","jwt","error","handleSubmit","handleChange","errors","validationSchema","loading"],"mappings":"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","sourcesContent":["import { useFormik } from \"formik\";\nimport React, {useState} from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Button, Form } from \"semantic-ui-react\";\n\nimport * as UserApi from '../../../../api/user';\n\nimport RegisterValidationSchema from \"./RegisterValidationSchema\";\n\nconst initialValues = {\n  name: \"\",\n  lastname: \"\",\n  username: \"\",\n  email: \"\",\n  password: \"\",\n};\n\nexport default function RegisterForm({ showLoginForm }) {\n\n  const onSubmit = async (data) => {\n    setLoading(true);\n    const response = await UserApi.create(data);\n    \n    console.log(response);\n\n    if(response?.jwt){\n      showLoginForm();\n    }else{\n      toast.error(\"Error al registrar el usuario\");\n    }\n\n    setLoading(false);\n  };\n\n  // Formik Hooks\n  const { handleSubmit, handleChange, errors } = useFormik({\n    initialValues,\n    validationSchema: RegisterValidationSchema,\n    onSubmit: onSubmit,\n  });\n\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Input\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Nombre\"\n        onChange={handleChange}\n        error={errors.name}\n      />\n\n      <Form.Input\n        name=\"lastname\"\n        type=\"text\"\n        placeholder=\"Apellidos\"\n        onChange={handleChange}\n        error={errors.lastname}\n      />\n\n      <Form.Input\n        name=\"username\"\n        type=\"text\"\n        placeholder=\"Nombre de Usuario\"\n        onChange={handleChange}\n        error={errors.username}\n      />\n\n      <Form.Input\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Correo\"\n        onChange={handleChange}\n        error={errors.email}\n      />\n\n      <Form.Input\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"ContraseÃ±a\"\n        onChange={handleChange}\n        error={errors.password}\n      />\n\n      <div className=\"actions\">\n        <Button type=\"button\" basic onClick={showLoginForm}>\n          Iniciar sesi&oacute;n\n        </Button>\n        <Button type=\"submit\" className=\"submit\" loading={loading}>\n          Registrar\n        </Button>\n      </div>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}