{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/Data/Repos/rgamer-store/client/components/Auth/Forms/LoginForm/LoginForm.jsx\";\nimport { useFormik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { initalValues, validationSchema } from \"./LoginFormValues\";\nimport * as UserApi from \"../../../../api/user\";\nimport { toast } from \"react-toastify\";\nimport useAuth from \"../../../../hooks/useAuth\";\nexport default function LoginForm({\n  showRegisterForm,\n  onCloseModal\n}) {\n  const onSubmit = async data => {\n    setLoading(true);\n    const response = await UserApi.login(data);\n    console.log(response);\n\n    if (response !== null && response !== void 0 && response.jwt) {\n      login(response === null || response === void 0 ? void 0 : response.jwt);\n      onCloseModal();\n    } else {\n      toast.error(\"Usuario o contrase単a incorrecta\");\n    }\n\n    setLoading(false);\n  };\n\n  const {\n    login\n  } = useAuth();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    handleChange,\n    handleSubmit,\n    errors\n  } = useFormik({\n    initialValues: initalValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"login-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"identifier\",\n      onChange: handleChange,\n      error: errors.identifier,\n      type: \"text\",\n      placeholder: \"Correo electr\\xF3nico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      name: \"password\",\n      onChange: handleChange,\n      error: errors.password,\n      type: \"password\",\n      placeholder: \"Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        basic: true,\n        onClick: showRegisterForm,\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"submit\",\n          type: \"submit\",\n          loading: loading,\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          children: \"\\xBFHas olvidado la contrase\\xF1a?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/media/Data/Repos/rgamer-store/client/components/Auth/Forms/LoginForm/LoginForm.jsx"],"names":["useFormik","React","useState","Form","Button","initalValues","validationSchema","UserApi","toast","useAuth","LoginForm","showRegisterForm","onCloseModal","onSubmit","data","setLoading","response","login","console","log","jwt","error","loading","handleChange","handleSubmit","errors","initialValues","identifier","password"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,mBAA/C;AAEA,OAAO,KAAKC,OAAZ,MAAyB,sBAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAAnB,EAAuD;AACpE,QAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/BC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,KAAR,CAAcH,IAAd,CAAvB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,QAAIA,QAAJ,aAAIA,QAAJ,eAAIA,QAAQ,CAAEI,GAAd,EAAmB;AACjBH,MAAAA,KAAK,CAACD,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEI,GAAX,CAAL;AACAR,MAAAA,YAAY;AACb,KAHD,MAGO;AACLJ,MAAAA,KAAK,CAACa,KAAN,CAAY,iCAAZ;AACD;;AACDN,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAXD;;AAaA,QAAM;AAACE,IAAAA;AAAD,MAAUR,OAAO,EAAvB;AAGA,QAAM;AAAA,OAACa,OAAD;AAAA,OAAUP;AAAV,MAAwBb,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM;AAAEqB,IAAAA,YAAF;AAAgBC,IAAAA,YAAhB;AAA8BC,IAAAA;AAA9B,MAAyCzB,SAAS,CAAC;AACvD0B,IAAAA,aAAa,EAAErB,YADwC;AAEvDC,IAAAA,gBAAgB,EAAEA,gBAFqC;AAGvDO,IAAAA,QAAQ,EAAEA;AAH6C,GAAD,CAAxD;AAMA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEW,YAAvC;AAAA,4BACE,QAAC,IAAD,CAAM,KAAN;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,QAAQ,EAAED,YAFZ;AAGE,MAAA,KAAK,EAAEE,MAAM,CAACE,UAHhB;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,IAAD,CAAM,KAAN;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,QAAQ,EAAEJ,YAFZ;AAGE,MAAA,KAAK,EAAEE,MAAM,CAACG,QAHhB;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,YARF,eAgBE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,MAA3B;AAA4B,QAAA,OAAO,EAAEjB,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,IAAI,EAAC,QAAhC;AAAyC,UAAA,OAAO,EAAEW,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD","sourcesContent":["import { useFormik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { initalValues, validationSchema } from \"./LoginFormValues\";\n\nimport * as UserApi from \"../../../../api/user\";\nimport { toast } from \"react-toastify\";\nimport useAuth from \"../../../../hooks/useAuth\";\n\nexport default function LoginForm({ showRegisterForm, onCloseModal }) {\n  const onSubmit = async (data) => {\n    setLoading(true);\n    const response = await UserApi.login(data);\n    console.log(response);\n    if (response?.jwt) {\n      login(response?.jwt)\n      onCloseModal();\n    } else {\n      toast.error(\"Usuario o contrase単a incorrecta\");\n    }\n    setLoading(false);\n  };\n\n  const {login} = useAuth();\n\n\n  const [loading, setLoading] = useState(false);\n\n  const { handleChange, handleSubmit, errors } = useFormik({\n    initialValues: initalValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n  });\n\n  return (\n    <Form className=\"login-form\" onSubmit={handleSubmit}>\n      <Form.Input\n        name=\"identifier\"\n        onChange={handleChange}\n        error={errors.identifier}\n        type=\"text\"\n        placeholder=\"Correo electr&oacute;nico\"\n      />\n      <Form.Input\n        name=\"password\"\n        onChange={handleChange}\n        error={errors.password}\n        type=\"password\"\n        placeholder=\"Contrase&ntilde;a\"\n      />\n\n      <div className=\"actions\">\n        <Button type=\"button\" basic onClick={showRegisterForm}>\n          Registrarse\n        </Button>\n        <div>\n          <Button className=\"submit\" type=\"submit\" loading={loading}>\n            Entrar\n          </Button>\n          <Button type=\"button\">多Has olvidado la contrase単a?</Button>\n        </div>\n      </div>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}